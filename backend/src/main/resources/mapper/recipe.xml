<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.cooking.dao.RecipeDao">
	<insert id = "addRecipe" useGeneratedKeys="true" keyProperty="recipe_id">
		insert into Recipe(
						recipe_user, category_id, title, description, 
						main_image, servings, cooking_time, level, tag
					) values(
						#{recipe_user}, #{category_id}, #{title}, #{description},
						#{main_image}, #{servings}, #{cooking_time}, #{level}, #{tag}
					)
	</insert>
	<insert id = "addIngredients">
		insert into Ingredients(
						recipe_id, food_ingredient_small_id, is_essential, quantity
					) values(
						<foreach collection="list" item="ingredients" separator=",">
							#{recipe_id}, #{ingredients.food_ingredient_small_id}, #{ingredients.is_essential}, #{ingredients.quantity}
						</foreach>
					)
	</insert>
	<insert id = "addCookingsteps">
		insert into Cooking_steps(
						recipe_id, steps, description, tip, 
						step_image, time
					) values(
						<foreach collection="list" item="cookingSteps" separator=",">
							#{recipe_id}, #{cookingSteps.steps}, #{cookingSteps.description}, #{cookingSteps.tip}, #{cookingSteps.step_image}, #{cookingSteps.time}
						</foreach>
					)
	</insert>

	<select id="getRecipes" resultType="Recipe">
		SELECT recipe_id, recipe_user, u.nickname as recipe_user_name,
		category_id, title, description, main_image, servings, cooking_time, level,
		tag, r.hits as hits, r.create_date as create_date, r.update_date as
		update_date, r.delete_date as delete_date
		FROM Recipe r
		join User u on r.recipe_user = u.user_id
		WHERE 1 = 1
		<if test="query != null and query != ''">
			AND title LIKE CONCAT('%', #{query}, '%')
		</if>
		<if test="id != null and id != ''">
			AND recipe_id = #{id}
		</if>
		<if test="user != null and user != ''">
			AND recipe_user = #{user}
		</if>
		<if test="category != null and category != ''">
			AND category = #{category}
		</if>
		ORDER BY create_date DESC
		Limit #{start}, #{end}
	</select>
	
	<update id="upHits">
		UPDATE Recipe
		SET hits = hits + 1
		WHERE recipe_id = #{recipe_id}
	</update>
	
	<select id="getIngredients" resultType="Ingredient">
		SELECT recipe_ingredient_id, recipe_id, 
		i.food_ingredient_small_id, s.small as food_ingredient_small_name, 
		is_essential, quantity, create_date, update_date
		FROM Ingredient i
        join Food_ingredient_small s on i.food_ingredient_small_id = s.food_ingredient_small_id
		WHERE i.recipe_id = #{recipe_id}
	</select>
	
	<select id="getCookingSteps" resultType="CookingStep">
		SELECT cooking_steps_id, recipe_id, 
		steps, description, tip, step_image
		create_date, update_date, time
		FROM Cooking_steps
		WHERE recipe_id = #{recipe_id}
	</select>
	
	<delete id="deleteRecipe">
		DELETE from Recipe
		WHERE recipe_id = #{recipe_id} and recipe_user = #{uid}
	</delete>
	
	<select id="getCommnets" resultType="Comment">
		SELECT comment_id, comment_user as comment_user_id, u.nickname as comment_user_name,
		recipe_id, c.description, 
		c.create_date, c.update_date, c.delete_date
		FROM Comments c
		join User u on c.comment_user = u.user_id
		WHERE recipe_id = #{recipe_id}
	</select>
	
	<insert id = "addCommnet">
		insert into Comments(
						comment_user
						, recipe_id
						, description
					) values(
						#{comment.comment_user_id}
						, #{recipe_id}
						, #{comment.description}
					)
	</insert>
	
	<update id="modifyComment">
		UPDATE Comments
		SET description = #{comment.description}
			, update_date = now()
		WHERE comment_id = #{comment.comment_id} and comment_user = #{uid}
	</update>
	
	<delete id="deleteComment">
		DELETE from Comments
		WHERE comment_id = #{comment_id} and comment_user = #{uid}
	</delete>
</mapper>
