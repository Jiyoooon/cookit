<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.cooking.dao.RecipeDao">
	<insert id = "addRecipe">
		insert into Recipe(
						recipe_user, category_id, title, description, 
						main_image, servings, cooking_time, level, tag
					) values(
						#{recipe_user}, #{category_id}, #{title}, #{description},
						#{main_image}, #{servings}, #{cooking_time}, #{level}, #{tag}
					)

			<selectKey keyProperty="recipe_id" resultType="Integer">
			SELECT LAST_INSERT_ID()
			</selectKey>
	</insert>
	<insert id = "addIngredients">
		insert into Ingredients(
						recipe_id, food_ingredient_small_id, is_essential, quantity
					) values
					<foreach collection="ingredients" item="ingre" separator=",">
					(
						#{recipe_id}, #{ingre.food_ingredient_small_id}, #{ingre.is_essential}, #{ingre.quantity}
						
					)
					</foreach>
	</insert>
	<insert id = "addCookingsteps">
		insert into Cooking_steps(
						recipe_id, steps, description, tip, 
						step_image, time
					) values
					<foreach collection="cookingSteps" item="step" separator=",">
					(
						#{recipe_id}, #{step.steps}, #{step.description}, #{step.tip}, #{step.step_image}, #{step.time}
					)
					</foreach>
					
	</insert>

	<select id="getRecipes" resultType="Recipe">
		SELECT recipe_id, recipe_user, u.nickname as recipe_user_name,
		category_id, title, description, main_image, servings, cooking_time, level,
		tag, r.hits as hits, r.create_date as create_date, r.update_date as
		update_date, r.delete_date as delete_date
		FROM Recipe r
		join User u on r.recipe_user = u.user_id
		WHERE 1 = 1
		<if test="query != null and query != ''">
			AND title LIKE CONCAT('%', #{query}, '%')
		</if>
		<if test="id != null and id != '' and id != 0">
			AND recipe_id = #{id}
		</if>
		<if test="user != null and user != ''">
			AND u.nickname = #{user}
		</if>
		<if test="category != null and category != ''">
			AND category_id = #{category}
		</if>
		ORDER BY create_date DESC
		Limit #{start}, #{end}
	</select>
	
	<update id="upHits">
		UPDATE Recipe
		SET hits = hits + 1
		WHERE recipe_id = #{recipe_id}
	</update>
	
	<select id="getIngredients" resultType="Ingredient">
		SELECT recipe_ingredient_id, recipe_id, 
		i.food_ingredient_small_id, s.small as food_ingredient_small_name, 
		is_essential, quantity, create_date, update_date
		FROM Ingredient i
        join Food_ingredient_small s on i.food_ingredient_small_id = s.food_ingredient_small_id
		WHERE i.recipe_id = #{recipe_id}
	</select>
	
	<select id="getCookingSteps" resultType="CookingStep">
		SELECT cooking_steps_id, recipe_id, 
		steps, description, tip, step_image
		create_date, update_date, time
		FROM Cooking_steps
		WHERE recipe_id = #{recipe_id}
	</select>
	
	<delete id="deleteRecipe">
		DELETE from Recipe
		WHERE recipe_id = #{recipe_id} and recipe_user = #{uid}
	</delete>
	
	<select id="getCommnets" resultType="Comment">
		SELECT comment_id, comment_user as comment_user_id, u.nickname as comment_user_name,
		recipe_id, c.description, 
		c.create_date, c.update_date, c.delete_date
		FROM Comments c
		join User u on c.comment_user = u.user_id
		WHERE recipe_id = #{recipe_id}
	</select>
	
	<insert id = "addCommnet">
		insert into Comments(
						comment_user
						, recipe_id
						, description
					) values(
						#{comment.comment_user_id}
						, #{recipe_id}
						, #{comment.description}
					)
	</insert>
	
	<update id="modifyComment">
		UPDATE Comments
		SET description = #{comment.description}
			, update_date = now()
		WHERE comment_id = #{comment.comment_id} and comment_user = #{uid}
	</update>
	
	<delete id="deleteComment">
		DELETE from Comments
		WHERE comment_id = #{comment_id} and comment_user = #{uid}
	</delete>
	
	<select id="getSmallIngredients" resultType="FoodIngredientSmall">
		SELECT * FROM cooking.Food_ingredient_small
	</select>
	
	<select id="getMediumIngredients" resultType="FoodIngredientMedium">
		SELECT * FROM cooking.Food_ingredient_medium
	</select>
	
	<select id="getLargeIngredients" resultType="FoodIngredientLarge">
		SELECT * FROM cooking.Food_ingredient_large
	</select>
	
	<select id="getRecipes2" resultType="Recipe">
		SELECT recipe_id, recipe_user, u.nickname as recipe_user_name,
		category_id, title, description, main_image, servings, cooking_time, level,
		tag, r.hits as hits, r.create_date as create_date, r.update_date as
		update_date, r.delete_date as delete_date
		FROM Recipe r
		join User u on r.recipe_user = u.user_id
		WHERE 1 = 1
		<if test="query != null and query != ''">
			AND title LIKE CONCAT('%', #{query}, '%')
		</if>
		<if test="id != null and id != '' and id != 0">
			AND recipe_id = #{id}
		</if>
		<if test="user != null and user != ''">
			AND u.nickname = #{user}
		</if>
		<if test="category != null and category != ''">
			AND category_id = #{category}
		</if>
		<if test="hate_small != null">
			<foreach collection="hate_small" item="hates">
				AND (SELECT food_ingredient_small_id FROM Food_ingredient_small WHERE small = #{hates})
					NOT IN (SELECT i.food_ingredient_small_id 
							FROM Ingredient i 
	                    	WHERE i.recipe_id = r.recipe_id 
							  AND i.is_essential = 1)
			</foreach>
		</if>
		<if test="hate_medium != null">
			<foreach collection="hate_medium" item="hatem">
				AND (SELECT food_ingredient_medium_id FROM Food_ingredient_medium WHERE medium = #{hatem})
					NOT IN (SELECT fis.food_ingredient_medium_id 
							FROM Ingredient i 
							JOIN Food_ingredient_small 	fis USING(food_ingredient_small_id)
	                    	WHERE i.recipe_id = r.recipe_id 
							  AND i.is_essential = 1)
			</foreach>
		</if>
		<if test="hate_large != null">
			<foreach collection="hate_large" item="hatel">
				AND (SELECT food_ingredient_large_id FROM Food_ingredient_large WHERE large = #{hatel})
					NOT IN (SELECT fim.food_ingredient_large_id 
							FROM Ingredient i 
							JOIN Food_ingredient_small 	fis USING(food_ingredient_small_id)
							JOIN Food_ingredient_medium fim USING(food_ingredient_medium_id)
	                    	WHERE i.recipe_id = r.recipe_id 
							  AND i.is_essential = 1)
			</foreach>
		</if>
		<if test="like_small != null or like_medium != null or like_large != null">
			AND(
		</if>
		<if test="like_small != null">
			<foreach collection="like_small" item="likes" separator=" or ">
				(SELECT food_ingredient_small_id FROM Food_ingredient_small WHERE small = #{likes})
					IN (SELECT i.food_ingredient_small_id 
						FROM Ingredient i 
	                    WHERE i.recipe_id = r.recipe_id)
	             
			</foreach>
		</if>
		<if test="like_medium != null">
			<if test="like_small != null"> 
				OR 
			</if>
			<foreach collection="like_medium" item="likem" separator=" or ">
				(SELECT food_ingredient_medium_id FROM Food_ingredient_medium WHERE medium = #{likem})
					IN (SELECT fis.food_ingredient_medium_id 
						FROM Ingredient i 
						JOIN Food_ingredient_small 	fis USING(food_ingredient_small_id)
	                    WHERE i.recipe_id = r.recipe_id)
			</foreach>
		</if>
		<if test="like_large != null">
			<if test="like_small != null or like_medium != null"> 
				OR 
			</if>
			<foreach collection="like_large" item="likel" separator=" or ">
				(SELECT food_ingredient_large_id FROM Food_ingredient_large WHERE large = #{likel})
					IN (SELECT fim.food_ingredient_large_id 
						FROM Ingredient i 
						JOIN Food_ingredient_small 	fis USING(food_ingredient_small_id)
						JOIN Food_ingredient_medium fim USING(food_ingredient_medium_id)
	                    WHERE i.recipe_id = r.recipe_id)
			</foreach>
		</if>
		<if test="like_small != null or like_medium != null or like_large != null">
			)
		</if>
		ORDER BY create_date DESC
		Limit #{start}, #{end}
	</select>
</mapper>
